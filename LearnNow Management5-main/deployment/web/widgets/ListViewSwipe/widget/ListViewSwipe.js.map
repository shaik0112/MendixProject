{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/hammerjs/hammer.js","webpack:///./src/HammerSwipe.ts","webpack:///./src/ListViewSwipe.ts","webpack:///./src/Utils.ts","webpack:///./src/polyfill.js","webpack:///./src/ui/ListViewSwipe.css","webpack:///external \"dijit/registry\"","webpack:///external \"dojo/_base/declare\"","webpack:///external \"dojo/aspect\"","webpack:///external \"dojo/dom-class\"","webpack:///external \"dojo/dom-construct\"","webpack:///external \"dojo/dom-style\"","webpack:///external \"mxui/widget/_WidgetBase\""],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,UAAU;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,UAAU;AACrB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,0BAA0B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,YAAY;AACvB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM,OAAO,KAAK,EAAE,KAAK,EAAE,KAAK;AAC3C,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa,MAAM,GAAG,KAAK,EAAE,KAAK;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO,KAAK;AACvB,WAAW,OAAO,KAAK;AACvB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;;AAED;AACA,UAAU;AACV,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,4BAA4B,8BAA8B;;AAE1D;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA,gBAAgB;;AAEhB;AACA;AACA,eAAe,OAAO;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;AACA,kCAAkC,EAAE;;AAEpC;AACA;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,EAAE;;AAElC;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,kBAAkB;AAC7B,WAAW,WAAW;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,EAAE;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,4BAA4B,cAAc;AAC1C,2BAA2B,cAAc;AACzC,2BAA2B,gCAAgC;AAC3D,yBAAyB,gCAAgC;AACzD;AACA,yBAAyB,4BAA4B;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,OAAO;AAClB;AACA;AACA;AACA,4BAA4B,gCAAgC;;AAE5D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,kBAAkB;AACjC,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,iBAAiB,aAAa;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,mGAAmG,GAAG;AACtG;;AAEA,IAAI,IAA0C;AAC9C,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,oGAAC;AACN,CAAC,MAAM,EAIN;;AAED,CAAC;;;;;;;;;;;;;;;IC5jFD;QAsBI,qBAAY,SAAsB,EAAE,OAAqB;YAAzD,iBAuBC;YAxCO,aAAQ,GAAG,KAAK,CAAC;YACjB,gBAAW,GAAG,KAAK,CAAC;YAKpB,0BAAqB,GAAG,CAAC,CAAC;YAIzB,oBAAe,GAAG,GAAG,CAAC;YACtB,oBAAe,GAAG,EAAE,CAAC;YACrB,gCAA2B,GAAG,EAAE,CAAC;YACjC,kBAAa,GAAG,EAAE,CAAC;Y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","file":"src/ListViewSwipe/widget/ListViewSwipe.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dijit/registry\"), require(\"dojo/_base/declare\"), require(\"dojo/aspect\"), require(\"dojo/dom-class\"), require(\"dojo/dom-construct\"), require(\"dojo/dom-style\"), require(\"mxui/widget/_WidgetBase\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"dijit/registry\", \"dojo/_base/declare\", \"dojo/aspect\", \"dojo/dom-class\", \"dojo/dom-construct\", \"dojo/dom-style\", \"mxui/widget/_WidgetBase\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"dijit/registry\"), require(\"dojo/_base/declare\"), require(\"dojo/aspect\"), require(\"dojo/dom-class\"), require(\"dojo/dom-construct\"), require(\"dojo/dom-style\"), require(\"mxui/widget/_WidgetBase\")) : factory(root[\"dijit/registry\"], root[\"dojo/_base/declare\"], root[\"dojo/aspect\"], root[\"dojo/dom-class\"], root[\"dojo/dom-construct\"], root[\"dojo/dom-style\"], root[\"mxui/widget/_WidgetBase\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE_dijit_registry__, __WEBPACK_EXTERNAL_MODULE_dojo_base_declare__, __WEBPACK_EXTERNAL_MODULE_dojo_aspect__, __WEBPACK_EXTERNAL_MODULE_dojo_dom_class__, __WEBPACK_EXTERNAL_MODULE_dojo_dom_construct__, __WEBPACK_EXTERNAL_MODULE_dojo_dom_style__, __WEBPACK_EXTERNAL_MODULE_mxui_widget_WidgetBase__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/ListViewSwipe.ts\");\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n","import * as Hammer from \"hammerjs\";\r\nimport * as domStyle from \"dojo/dom-style\";\r\nimport { Utils } from \"./Utils\";\r\nimport \"./polyfill\";\r\n\r\ninterface SwipeOptions {\r\n    afterSwipeAction: {left: AfterSwipeAction, right: AfterSwipeAction};\r\n    afterSwipeBackgroundName: {left: string, right: string };\r\n    backgroundName: {left: string, right: string};\r\n    callback: (element: HTMLElement, direction: Direction) => void;\r\n    callbackDelay: { left: number, right: number };\r\n    classPrefix: string;\r\n    parentElement: HTMLElement;\r\n    swipeDirection: Direction | \"horizontal\";\r\n    transparentOnSwipe?: { left: boolean, right: boolean };\r\n}\r\n\r\ninterface Elements { left: HTMLElement | undefined; right: HTMLElement | undefined; }\r\n\r\ntype Direction = \"right\" | \"left\";\r\ntype AfterSwipeAction = \"reset\" | \"hide\" | \"none\" | \"back\" | \"button\";\r\n\r\nclass HammerSwipe {\r\n    private container: HTMLElement;\r\n    private containerSize: number;\r\n    private hammer: HammerManager;\r\n    private options: SwipeOptions;\r\n    private isSwiped = false;\r\n    private isScrolling = false;\r\n    private foreElement: HTMLElement;\r\n    private backElement: Elements;\r\n    private afterElement: Elements;\r\n    private border: { left: number, right: number };\r\n    private thresholdCompensation = 0;\r\n    private thresholdAcceptSwipe: { left: number, right: number };\r\n    private panCanceled: boolean;\r\n    // Internal settings\r\n    readonly delayRemoveItem = 400; // Milliseconds\r\n    readonly thresholdScroll = 60; // Pixels.\r\n    readonly defaultThresholdAcceptSwipe = 30; // Percentage.\r\n    readonly thresholdMove = 25; // Pixels\r\n    readonly thresholdVelocity = 1.2; // Pixels per milliseconds\r\n    readonly buttonClasses = [ \"mx-button\", \"mx-link\", \"clickable\" ];\r\n\r\n    constructor(container: HTMLElement, options: SwipeOptions) {\r\n        this.container = container;\r\n        this.options = options;\r\n\r\n        this.setupElements(options);\r\n        this.checkButtons(\"left\");\r\n        this.checkButtons(\"right\");\r\n        this.addHideTransitionEvent(\"left\");\r\n        this.addHideTransitionEvent(\"right\");\r\n\r\n        const direction = options.swipeDirection === \"right\" ? Hammer.DIRECTION_RIGHT\r\n            : options.swipeDirection === \"left\" ? Hammer.DIRECTION_LEFT\r\n            : options.swipeDirection === \"horizontal\" ? Hammer.DIRECTION_HORIZONTAL\r\n            : Hammer.DIRECTION_NONE;\r\n\r\n        this.hammer = new Hammer.Manager(this.foreElement);\r\n        this.hammer.add(new Hammer.Pan({\r\n            direction,\r\n            threshold: this.thresholdMove\r\n        }));\r\n        this.hammer.on(\"panstart\", event => this.onPanStart(event));\r\n        this.hammer.on(\"panmove\", event => this.onPanMove(event));\r\n        this.hammer.on(\"panend pancancel\", event => this.onPanEnd(event));\r\n    }\r\n\r\n    destroy() {\r\n        this.hammer.destroy();\r\n    }\r\n\r\n    private setupElements(options: SwipeOptions) {\r\n        const setForeground = this.container.querySelector(`.${this.options.classPrefix}-foreground`);\r\n        if (setForeground) {\r\n            // Foreground is the modelled container with the foreground class\r\n            this.foreElement = setForeground as HTMLElement;\r\n        } else {\r\n            // Foreground is the mx-dataview-content\r\n            this.foreElement = this.container.firstChild.firstChild as HTMLElement;\r\n            Utils.addClass(this.foreElement, this.options.classPrefix + \"-foreground\");\r\n        }\r\n\r\n        this.backElement = {\r\n            left: this.findElement(options.backgroundName.left, \"Swipe container left\"),\r\n            right: this.findElement(options.backgroundName.right, \"Swipe container right\")\r\n        };\r\n        this.afterElement = {\r\n            left: this.findElement(options.afterSwipeBackgroundName.left, \"Hide container left\"),\r\n            right: this.findElement(options.afterSwipeBackgroundName.right, \"Hide container right\")\r\n        };\r\n        this.setElementClasses();\r\n    }\r\n\r\n    private checkButtons(direction: Direction) {\r\n        const backElement = this.backElement[direction];\r\n        if (backElement && this.options.afterSwipeAction[direction] === \"button\") {\r\n            const buttons = backElement.querySelectorAll(\".\" + this.buttonClasses.join(\", .\"));\r\n            if (buttons.length === 0) {\r\n                throw new Error(`LVS no buttons or links found in the '${this.options.backgroundName[direction]}' ` +\r\n                    `container. This is required when 'After swipe ${direction}' is set to 'Stick to button(s)'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private findElement(name: string, displayName: string): HTMLElement | undefined {\r\n        const element = name ? this.container.querySelector(`.mx-name-${name}`) as HTMLElement : undefined;\r\n        if (name && !element) {\r\n            throw new Error(`LVS no '${displayName}' found named ${name}. It should be placed inside the list view`);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    private setElementClasses() {\r\n        const prefix = this.options.classPrefix;\r\n        Utils.addClass(this.backElement.left, prefix + \"-background\");\r\n        Utils.addClass(this.backElement.right, prefix + \"-background\");\r\n        if (this.backElement.left === this.backElement.right) {\r\n            Utils.addClass(this.backElement.left, prefix + \"-background-shared\");\r\n        } else {\r\n            Utils.addClass(this.backElement.left, prefix + \"-background-left\");\r\n            Utils.addClass(this.backElement.right, prefix + \"-background-right\");\r\n        }\r\n\r\n        Utils.addClass(this.afterElement.left, prefix + \"-background-after\");\r\n        Utils.addClass(this.afterElement.right, prefix + \"-background-after\");\r\n        if (this.afterElement.left === this.afterElement.right) {\r\n            Utils.addClass(this.afterElement.left, prefix + \"-background-after-shared\");\r\n        } else {\r\n            Utils.addClass(this.afterElement.left, prefix + \"-background-after-left\");\r\n            Utils.addClass(this.afterElement.right, prefix + \"-background-after-right\");\r\n        }\r\n    }\r\n\r\n    private shouldCancel(event: HammerInput): boolean {\r\n        const prefix = this.options.classPrefix;\r\n        const target = event.target;\r\n        const direction = event.direction;\r\n\r\n        return event.pointerType === \"mouse\"\r\n            || !!target.closest(`.${prefix}-disabled`)\r\n            || (!!target.closest(`.${prefix}-disabled-left`) && direction === Hammer.DIRECTION_LEFT)\r\n            || (!!target.closest(`.${prefix}-disabled-right`) && direction === Hammer.DIRECTION_RIGHT);\r\n    }\r\n\r\n    private onPanStart(event: HammerInput) {\r\n        this.panCanceled = false;\r\n\r\n        if (this.shouldCancel(event)) {\r\n            this.panCanceled = true;\r\n        }\r\n        if (this.isSwiped) {\r\n            this.resetElements();\r\n            return;\r\n        }\r\n        this.sizeCalculations();\r\n        this.isScrolling = false;\r\n        this.thresholdCompensation = event.deltaX;\r\n    }\r\n\r\n    private onPanMove(event: HammerInput) {\r\n        if (this.panCanceled) return;\r\n        if (this.isSwiped) return;\r\n        if (this.isScrolling) return;\r\n\r\n        const isScrolling = Math.abs(event.deltaY) > this.thresholdScroll;\r\n        if (isScrolling) {\r\n            this.isScrolling = true;\r\n            this.show(0, true);\r\n            return;\r\n        }\r\n\r\n        let percentage = (100 / this.containerSize) * (event.deltaX - this.thresholdCompensation);\r\n        if (this.options.swipeDirection === \"right\" && percentage < 0) {\r\n            percentage = 0;\r\n        }\r\n        if (this.options.swipeDirection === \"left\" && percentage > 0) {\r\n            percentage = 0;\r\n        }\r\n        this.show(percentage, false);\r\n    }\r\n\r\n    private onPanEnd(event: HammerInput) {\r\n        if (this.panCanceled) return;\r\n        if (this.isScrolling) return;\r\n\r\n        if (this.isSwiped) {\r\n            this.isSwiped = false;\r\n            return;\r\n        }\r\n\r\n        let percentage = (100 / this.containerSize) * (event.deltaX - this.thresholdCompensation);\r\n        const direction = percentage < 0 ? \"left\" : \"right\";\r\n        if (this.options.swipeDirection === \"right\" && percentage < 0) {\r\n            percentage = 0;\r\n        }\r\n        if (this.options.swipeDirection === \"left\" && percentage > 0) {\r\n            percentage = 0;\r\n        }\r\n        if ((Math.abs(percentage) > this.thresholdAcceptSwipe[direction]\r\n            || Math.abs(event.velocityX) > this.thresholdVelocity)\r\n            && event.type === \"panend\") {\r\n            this.swipeAnimation(direction);\r\n            this.afterSwipeAnimation(direction);\r\n            return;\r\n        } else {\r\n            this.show(0, true);\r\n        }\r\n    }\r\n\r\n    private sizeCalculations() {\r\n        this.containerSize = this.container.offsetWidth;\r\n        const containerOffset = this.container.getBoundingClientRect().left;\r\n        this.border = {\r\n            left: -this.containerSize + this.findButtonBorder(\"left\") - containerOffset,\r\n            right: this.findButtonBorder(\"right\") - containerOffset\r\n        };\r\n        this.thresholdAcceptSwipe = {\r\n            left: this.calculateThresholdAcceptSwipe(\"left\"),\r\n            right: this.calculateThresholdAcceptSwipe(\"right\")\r\n        };\r\n    }\r\n\r\n    private findButtonBorder(direction: Direction): number {\r\n        Utils.removeClass(this.backElement[direction], \"hidden\");\r\n        let borderEdge = 0;\r\n        const backElement = this.backElement[direction];\r\n        if (backElement && this.options.afterSwipeAction[direction] === \"button\") {\r\n            const buttons = backElement.querySelectorAll(\".\" + this.buttonClasses.join(\", .\"));\r\n            for (let i = 0; i < buttons.length; i++) {\r\n                const button = buttons[i] as HTMLElement;\r\n                let position = button.getBoundingClientRect().left;\r\n                if (direction === \"left\") {\r\n                    borderEdge = borderEdge ? borderEdge > position ? position : borderEdge : position;\r\n                } else {\r\n                    position += button.offsetWidth;\r\n                    borderEdge = borderEdge ? borderEdge < position ? position : borderEdge : position;\r\n                }\r\n            }\r\n        }\r\n\r\n        return borderEdge;\r\n    }\r\n\r\n    private calculateThresholdAcceptSwipe(direction: Direction): number {\r\n        let thresholdAcceptSwipe = this.defaultThresholdAcceptSwipe;\r\n        if (this.options.afterSwipeAction[direction] === \"button\") {\r\n            thresholdAcceptSwipe = Math.abs(this.border[direction] / this.containerSize * 100);\r\n        }\r\n\r\n        return thresholdAcceptSwipe;\r\n    }\r\n\r\n    private resetElements(animate = true) {\r\n        Utils.removeClass(this.backElement.right, \"hide\");\r\n        Utils.removeClass(this.backElement.left, \"hide\");\r\n        Utils.removeClass(this.foreElement, \"swiped-out\");\r\n        Utils.removeClass(this.container, \"will-accept-swipe\");\r\n        Utils.addClass(this.afterElement.right, \"hidden\");\r\n        Utils.addClass(this.afterElement.left, \"hidden\");\r\n        this.show(0, animate);\r\n    }\r\n\r\n    private show(percentage = 0, animate?: boolean) {\r\n        if (animate) {\r\n            Utils.addClass(this.container, \"animate\");\r\n        } else {\r\n            Utils.removeClass(this.container, \"animate\");\r\n        }\r\n\r\n        const direction = percentage < 0 ? \"left\" : percentage > 0 ? \"right\" : undefined;\r\n        if (direction && Math.abs(percentage) > this.thresholdAcceptSwipe[direction]) {\r\n            Utils.addClass(this.container, \"will-accept-swipe\");\r\n        } else {\r\n            Utils.removeClass(this.container, \"will-accept-swipe\");\r\n        }\r\n        if (direction) {\r\n            this.updateBackground(direction);\r\n            const oppositeDirection = direction === \"left\" ? \"right\" : \"left\";\r\n            Utils.addClass(this.container, `swiping-${direction}`);\r\n            Utils.removeClass(this.container, `swiping-${oppositeDirection}`);\r\n        } else {\r\n            Utils.removeClass(this.container, \"swiping-right\");\r\n            Utils.removeClass(this.container, \"swiping-left\");\r\n        }\r\n\r\n        const position = (this.containerSize / 100) * percentage;\r\n        domStyle.set(this.foreElement, {\r\n            opacity: direction && this.options.transparentOnSwipe[direction] ? 1 - Math.abs(percentage / 100) : 1,\r\n            transform: \"translate3d(\" + position + \"px, 0, 0)\"\r\n        });\r\n    }\r\n\r\n    private updateBackground(direction: Direction) {\r\n        if (this.backElement.right !== this.backElement.left) {\r\n            const oppositeDirection = direction === \"left\" ? \"right\" : \"left\";\r\n            Utils.addClass(this.backElement[oppositeDirection], \"hidden\");\r\n        }\r\n        Utils.removeClass(this.backElement[direction], \"hidden\");\r\n    }\r\n\r\n    private swipeAnimation(direction: Direction) {\r\n        Utils.addClass(this.container, \"animate\");\r\n        let position = direction === \"left\" ? -this.containerSize : this.containerSize;\r\n        if (this.options.afterSwipeAction[direction] === \"button\") {\r\n            position = this.border[direction];\r\n        }\r\n        domStyle.set(this.foreElement, { transform: \"translate3d(\" + position + \"px, 0, 0)\" });\r\n        if (this.options.afterSwipeAction[direction] === \"none\"\r\n            || this.options.afterSwipeAction[direction] === \"button\") {\r\n            this.addRestoreEvent(this.options.parentElement);\r\n        }\r\n\r\n        this.isSwiped = true;\r\n    }\r\n\r\n    private addRestoreEvent(element: HTMLElement) {\r\n        const restore = (event: MouseEvent) => {\r\n            if (!Utils.inElement(element, event.target as HTMLElement, [ \"mx-button\", \"mx-link\", \"clickable\" ])) {\r\n                event.stopPropagation();\r\n            }\r\n            this.resetElements();\r\n            this.isSwiped = false;\r\n            element.removeEventListener(\"click\", restore, true);\r\n        };\r\n        element.addEventListener(\"click\", restore, true);\r\n    }\r\n\r\n    private afterSwipeAnimation(direction: Direction) {\r\n        if (this.options.afterSwipeAction[direction] === \"back\") {\r\n            this.resetElements(true);\r\n            this.isSwiped = false;\r\n            setTimeout(() => {\r\n                this.options.callback(this.container, direction);\r\n            }, this.options.callbackDelay[direction]);\r\n        } else if (this.options.afterSwipeAction[direction] === \"reset\") {\r\n            setTimeout(() => {\r\n                this.resetElements(false);\r\n                this.isSwiped = false;\r\n                this.options.callback(this.container, direction);\r\n            }, this.options.callbackDelay[direction]);\r\n        } else if (this.options.afterSwipeAction[direction] === \"hide\") {\r\n            const oppositeDirection = direction === \"left\" ? \"right\" : \"left\";\r\n            if (this.afterElement.right !== this.afterElement.left) {\r\n                Utils.addClass(this.afterElement[oppositeDirection], \"hidden\");\r\n            }\r\n            Utils.removeClass(this.afterElement[direction], \"hidden\");\r\n            setTimeout(() => {\r\n                Utils.addClass(this.container, \"animate\");\r\n                domStyle.set(this.container, { height: 0 });\r\n\r\n                setTimeout(() => {\r\n                    Utils.addClass(this.container, \"hide\");\r\n                    Utils.removeClass(this.container, \"animate\");\r\n                    this.options.callback(this.container, direction);\r\n                }, this.delayRemoveItem);\r\n            }, this.options.callbackDelay[direction]);\r\n        } else if (this.options.afterSwipeAction[direction] === \"none\") {\r\n            Utils.addClass(this.foreElement, \"swiped-out\");\r\n            setTimeout(() => {\r\n                this.options.callback(this.container, direction);\r\n            }, this.options.callbackDelay[direction]);\r\n        } else if (this.options.afterSwipeAction[direction] === \"button\") {\r\n            setTimeout(() => {\r\n                this.options.callback(this.container, direction);\r\n            }, this.options.callbackDelay[direction]);\r\n        }\r\n    }\r\n\r\n    private addHideTransitionEvent(direction: Direction) {\r\n        if (this.options.afterSwipeAction[direction] === \"hide\") {\r\n            this.foreElement.addEventListener(\"transitionend\", () => {\r\n                if (this.isSwiped) {\r\n                    domStyle.set(this.container, {\r\n                        height: this.container.offsetHeight + \"px\"\r\n                    });\r\n                    Utils.addClass(this.backElement[direction], \"hide\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport { HammerSwipe, Direction, AfterSwipeAction, SwipeOptions };\r\n","import * as dojoDeclare from \"dojo/_base/declare\";\r\nimport * as WidgetBase from \"mxui/widget/_WidgetBase\";\r\n\r\nimport * as registry from \"dijit/registry\";\r\nimport * as dojoAspect from \"dojo/aspect\";\r\nimport * as domClass from \"dojo/dom-class\";\r\nimport * as domConstruct from \"dojo/dom-construct\";\r\n\r\nimport * as Hammer from \"hammerjs\";\r\nimport { AfterSwipeAction, Direction, HammerSwipe, SwipeOptions } from \"./HammerSwipe\";\r\n\r\nimport \"./ui/ListViewSwipe.css\";\r\n\r\ntype OnSwipeAction = \"disabled\" | \"doNothing\" | \"showPage\" | \"callMicroflow\" | \"callNanoflow\";\r\n\r\ninterface ListView extends mxui.widget._WidgetBase {\r\n    datasource: { path: string };\r\n    _renderData: () => void;\r\n    // Custom property to check single connected widget to a list view, preventing copy past mistakes\r\n    connectListviewSwipeWidget: string;\r\n}\r\n\r\ninterface Nanoflow {\r\n    nanoflow: object[];\r\n    paramsSpec: { Progress: string };\r\n}\r\n\r\nclass ListViewSwipe extends WidgetBase {\r\n    // Properties from Mendix modeler\r\n    targetName: string;\r\n    transparentOnSwipeLeft: boolean;\r\n    transparentOnSwipeRight: boolean;\r\n    itemEntity: string;\r\n    actionTriggerDelayLeft: number;\r\n    actionTriggerDelayRight: number;\r\n    onSwipeActionLeft: OnSwipeAction;\r\n    onSwipeActionRight: OnSwipeAction;\r\n    onSwipeMicroflowLeft: string;\r\n    onSwipeNanoflowLeft: Nanoflow;\r\n    onSwipeMicroflowRight: string;\r\n    onSwipeNanoflowRight: Nanoflow;\r\n    onSwipePageLeft: string;\r\n    onSwipePageRight: string;\r\n    afterSwipeActionLeft: AfterSwipeAction;\r\n    afterSwipeActionRight: AfterSwipeAction;\r\n    backgroundNameLeft: string;\r\n    backgroundNameRight: string;\r\n    afterSwipeBackgroundNameLeft: string;\r\n    afterSwipeBackgroundNameRight: string;\r\n\r\n    private swipeClass: string;\r\n    private targetWidget: ListView;\r\n    private targetNode: HTMLElement;\r\n    private hammers: HammerSwipe[];\r\n    private onSwipePage: { left: string, right: string };\r\n    private onSwipeMicroflow: { left: string, right: string };\r\n    private onSwipeNanoflow: { left: Nanoflow, right: Nanoflow };\r\n    private onSwipeAction: { left: OnSwipeAction, right: OnSwipeAction };\r\n    private afterSwipeAction: { left: AfterSwipeAction, right: AfterSwipeAction };\r\n    private backgroundName: { left: string, right: string };\r\n\r\n    postCreate() {\r\n        this.hammers = [];\r\n        this.swipeClass = \"widget-listview-swipe\";\r\n        this.onSwipePage = { left: this.onSwipePageLeft, right: this.onSwipePageRight };\r\n        this.onSwipeMicroflow = { left: this.onSwipeMicroflowLeft, right: this.onSwipeMicroflowRight };\r\n        this.onSwipeNanoflow = { left: this.onSwipeNanoflowLeft, right: this.onSwipeNanoflowRight };\r\n        this.onSwipeAction = { left: this.onSwipeActionLeft, right: this.onSwipeActionRight };\r\n        this.afterSwipeAction = { left: this.afterSwipeActionLeft, right: this.afterSwipeActionRight };\r\n        this.backgroundName = { left: this.backgroundNameLeft, right: this.backgroundNameRight };\r\n        this.targetNode = this.findTargetNode(this.targetName);\r\n        if (this.validateConfig()) {\r\n            this.targetWidget.connectListviewSwipeWidget = this.id;\r\n            domClass.add(this.targetNode, this.swipeClass);\r\n        } else {\r\n            this.targetWidget = null;\r\n        }\r\n    }\r\n\r\n    update(_contextObject: mendix.lib.MxObject, callback?: () => void) {\r\n        if (this.targetWidget) {\r\n            let direction: Direction | \"horizontal\" | undefined;\r\n            if (this.onSwipeActionRight !== \"disabled\" && this.onSwipeActionLeft !== \"disabled\") {\r\n                direction = \"horizontal\";\r\n            } else if (this.onSwipeActionRight !== \"disabled\") {\r\n                direction = \"right\";\r\n            } else if (this.onSwipeActionLeft !== \"disabled\") {\r\n                direction = \"left\";\r\n            }\r\n\r\n            if (direction) {\r\n                const swipeOptions: SwipeOptions = {\r\n                    afterSwipeAction: { left: this.afterSwipeActionLeft, right: this.afterSwipeActionRight },\r\n                    afterSwipeBackgroundName: {\r\n                        left: this.afterSwipeBackgroundNameLeft,\r\n                        right: this.afterSwipeBackgroundNameRight\r\n                    },\r\n                    backgroundName: { left: this.backgroundNameLeft, right: this.backgroundNameRight },\r\n                    callback: (element, swipeDirection) => this.handleSwipe(element, swipeDirection),\r\n                    callbackDelay: { left: this.actionTriggerDelayLeft, right: this.actionTriggerDelayRight },\r\n                    classPrefix: this.swipeClass,\r\n                    parentElement: this.mxform.domNode,\r\n                    swipeDirection: direction,\r\n                    transparentOnSwipe: { left: this.transparentOnSwipeLeft, right: this.transparentOnSwipeRight }\r\n                };\r\n                // Note; this function is hooking into the Mendix private API, this is subject to change without notice!\r\n                // Please do not re-use this. The only supported API is publicly documented at\r\n                // https://apidocs.mendix.com/7/client/\r\n                dojoAspect.after(this.targetWidget, \"_renderData\", () => {\r\n                    try {\r\n                        // tslint:disable-next-line:max-line-length\r\n                        const listItemsOffscreen = this.targetNode.querySelectorAll(\".mx-offscreen > li:not(.swipe-connected):not(.mx-listview-empty)\");\r\n                        Hammer.each(listItemsOffscreen, (container: HTMLElement) => {\r\n                            container.classList.add(\"swipe-connected\");\r\n                            this.hammers.push(new HammerSwipe(container, swipeOptions));\r\n                        }, this);\r\n                        // tslint:disable-next-line:max-line-length\r\n                        const listItems = this.targetNode.querySelectorAll(\"ul > li:not(.swipe-connected):not(.mx-listview-empty)\");\r\n                        Hammer.each(listItems, (container: HTMLElement) => {\r\n                            container.classList.add(\"swipe-connected\");\r\n                            this.hammers.push(new HammerSwipe(container, swipeOptions));\r\n                        }, this);\r\n                    } catch (error) {\r\n                        // Should be implemented with throw new ConfigError\r\n                        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes\r\n                        // #extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n                        const codeException = !error.message.startsWith(\"LVS \");\r\n                        const message = codeException ? error.message : error.message.substring(4);\r\n                        this.showError(message, codeException);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        if (callback) callback();\r\n    }\r\n\r\n    uninitialize(): boolean {\r\n        this.hammers.forEach(hammer => hammer.destroy());\r\n\r\n        return true;\r\n    }\r\n\r\n    private findTargetNode(name: string): HTMLElement {\r\n        let queryNode = this.domNode.parentNode as Element;\r\n        let targetNode: HTMLElement | null = null;\r\n        while (!targetNode) {\r\n            targetNode = queryNode.querySelector(\".mx-name-\" + name) as HTMLElement;\r\n            if (window.document.isEqualNode(queryNode)) { break; }\r\n            queryNode = queryNode.parentNode as HTMLElement;\r\n        }\r\n\r\n        return targetNode;\r\n    }\r\n\r\n    private isDescendant(parent: HTMLElement, child: HTMLElement): boolean {\r\n        let node = child.parentNode;\r\n        while (node != null) {\r\n            if (node === parent) {\r\n                return true;\r\n            }\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private validateConfig(): boolean {\r\n        if (!this.targetNode) {\r\n            this.showError(`unable to find 'Target list view' named '${this.targetName}'`);\r\n            return false;\r\n        }\r\n        if (this.isDescendant(this.targetNode, this.domNode)) {\r\n            this.showError(\"The widget should not be placed inside the list view, \" +\r\n                \"move it directly below the list view, in the same context\");\r\n            return false;\r\n        }\r\n        this.targetWidget = registry.byNode(this.targetNode);\r\n        if (!this.targetWidget) {\r\n            this.showError(`Swipe widget view should be placed directly below the list view, in the same context`);\r\n            return false;\r\n        }\r\n        if (this.targetWidget.declaredClass !== \"mxui.widget.ListView\") {\r\n            this.showError(`'Target list view' name '${this.targetName}' is not of the type list view`);\r\n            return false;\r\n        }\r\n        // Note; this function is hooking into the Mendix private API, this is subject to change!\r\n        // Please do not re-use this. The only supported API is publicly documented at\r\n        // https://apidocs.mendix.com/7/client/\r\n        if (!this.targetWidget._renderData || !this.targetWidget.datasource || !this.targetWidget.datasource.path) {\r\n            this.showError(\"this Mendix version is not compatible\");\r\n            window.logger.error(\"mxui.widget.ListView does not have a _renderData function or datasource.path\");\r\n            return false;\r\n        }\r\n        if (this.targetWidget.connectListviewSwipeWidget) {\r\n            this.showError(`list view '${this.targetName}' can only have one swipe widget,\r\n            it is already connected to ${this.targetWidget.connectListviewSwipeWidget}`);\r\n            return false;\r\n        }\r\n        const segments = this.targetWidget.datasource.path.split(\"/\");\r\n        const listEntity = segments.length ? segments[segments.length - 1] : \"\";\r\n        if (this.itemEntity && this.itemEntity !== listEntity) {\r\n            this.showError(`'Item entity' ${this.itemEntity} does not match the list view entity ${listEntity}`);\r\n            return false;\r\n        }\r\n        this.itemEntity = listEntity;\r\n        if (this.onSwipeActionLeft === \"disabled\" && this.onSwipeActionRight === \"disabled\") {\r\n            this.showError(\"no 'On swipe action' left or right selected\");\r\n            return false;\r\n        }\r\n        if (!this.validateActionConfig(\"left\") || !this.validateActionConfig(\"right\")) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private validateActionConfig(direction: Direction): boolean {\r\n        if (this.onSwipeAction[direction] === \"disabled\") {\r\n            return true;\r\n        }\r\n        if (this.onSwipeAction[direction] === \"callMicroflow\" && !this.onSwipeMicroflow[direction]) {\r\n            this.showError(`no 'Microflow ${direction}' is selected`);\r\n            return false;\r\n        }\r\n        if (this.onSwipeAction[direction] === \"callNanoflow\" && !this.onSwipeNanoflow[direction]) {\r\n            this.showError(`no 'Nanoflow ${direction}' is selected`);\r\n            return false;\r\n        }\r\n        if (this.onSwipeAction[direction] === \"showPage\" && !this.onSwipePage[direction]) {\r\n            this.showError(`no 'Page ${direction}' is selected`);\r\n            return false;\r\n        }\r\n        if (this.afterSwipeAction[direction] === \"button\" && !this.backgroundName[direction]) {\r\n            this.showError(`no name for 'Swipe container ${direction}' provided. ` +\r\n                `This is required when 'After swipe ${direction}' is set to 'Stick to button(s)'`);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private showError(message: string, codeException = false) {\r\n        // Place the message inside the list view, only when it is rendered, else the message is removed.\r\n        const node = this.targetNode && this.targetNode.hasChildNodes() ? this.targetNode : this.domNode;\r\n        const type = codeException ? \"List view swipe code exception:\" : \"List view swipe configuration error:\";\r\n        domConstruct.place(`<div class='alert alert-danger'>${type}<br>- ${message}</div>`, node, \"first\");\r\n        window.logger.error(this.id, `configuration error: ${message}`);\r\n    }\r\n\r\n    private handleSwipe(element: HTMLElement, direction: Direction) {\r\n        const guid = registry.byNode(element).getGuid();\r\n        const context = this.createContext(guid);\r\n        this.handleAction(direction, context);\r\n    }\r\n\r\n    private handleAction(direction: Direction, context: mendix.lib.MxContext) {\r\n        if (this.onSwipeAction[direction] === \"callMicroflow\" && this.onSwipeMicroflow[direction]) {\r\n            window.mx.ui.action(this.onSwipeMicroflow[direction], {\r\n                context,\r\n                error: error =>\r\n                    window.mx.ui.error(`An error occurred while executing microflow\r\n                    ${this.onSwipeMicroflow[direction]}: ${error.message}`, true)\r\n            });\r\n        } else if (this.onSwipeAction[direction] === \"callNanoflow\" && this.onSwipeNanoflow[direction].nanoflow) {\r\n            window.mx.data.callNanoflow({\r\n                nanoflow: this.onSwipeNanoflow[direction],\r\n                origin: this.mxform,\r\n                context,\r\n                error: error =>\r\n                    window.mx.ui.error(`An error occurred while executing nanoflow\r\n                    ${this.onSwipeNanoflow[direction]}: ${error.message}`, true)\r\n            });\r\n        } else if (this.onSwipeAction[direction] === \"showPage\" && this.onSwipePage[direction]) {\r\n            window.mx.ui.openForm(this.onSwipePage[direction], {\r\n                location: \"content\",\r\n                context,\r\n                error: error =>\r\n                    window.mx.ui.error(`An error occurred while opening form\r\n                    ${this.onSwipePage[direction]} : ${error.message}`)\r\n            });\r\n        }\r\n    }\r\n\r\n    private createContext(guid: string): mendix.lib.MxContext {\r\n        const context = new mendix.lib.MxContext();\r\n        context.setContext(this.itemEntity, guid);\r\n        return context;\r\n    }\r\n}\r\n\r\n// Declare widget prototype the Dojo way\r\n// Thanks to https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/dojo/README.md\r\n// tslint:disable : only-arrow-functions\r\ndojoDeclare(\"ListViewSwipe.widget.ListViewSwipe\", [ WidgetBase ], function(Source: any) {\r\n    const result: any = {};\r\n    for (const property in Source.prototype) {\r\n        if (property !== \"constructor\" && Source.prototype.hasOwnProperty(property)) {\r\n            result[property] = Source.prototype[property];\r\n        }\r\n    }\r\n    return result;\r\n}(ListViewSwipe));\r\n","export class Utils {\r\n\r\n    static inElement(elementContainer: HTMLElement, element: HTMLElement, classNames: string[]): boolean {\r\n        let hasClass = false;\r\n        classNames.forEach(className => hasClass = hasClass || element.classList.contains(className));\r\n        if (hasClass) {\r\n            return true;\r\n        } else {\r\n            if (elementContainer !== element) {\r\n                return this.inElement(elementContainer, element.parentNode as HTMLElement, classNames);\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addClass(element: HTMLElement | undefined, className: string, ...classNamesList: string[]) {\r\n        classNamesList.push(className);\r\n        if (element) {\r\n            classNamesList.forEach(name => element.classList.add(name));\r\n        }\r\n    }\r\n\r\n    static removeClass(element: HTMLElement | undefined, className: string) {\r\n        if (element && element.classList) {\r\n            element.classList.remove(className);\r\n        }\r\n    }\r\n\r\n}\r\n","// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function(s) {\n        var el = this;\n        if (!document.documentElement.contains(el)) { return null; }\n        do {\n            if (el.matches(s)) { return el; }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n","// removed by extract-text-webpack-plugin","module.exports = __WEBPACK_EXTERNAL_MODULE_dijit_registry__;","module.exports = __WEBPACK_EXTERNAL_MODULE_dojo_base_declare__;","module.exports = __WEBPACK_EXTERNAL_MODULE_dojo_aspect__;","module.exports = __WEBPACK_EXTERNAL_MODULE_dojo_dom_class__;","module.exports = __WEBPACK_EXTERNAL_MODULE_dojo_dom_construct__;","module.exports = __WEBPACK_EXTERNAL_MODULE_dojo_dom_style__;","module.exports = __WEBPACK_EXTERNAL_MODULE_mxui_widget_WidgetBase__;"],"sourceRoot":""}